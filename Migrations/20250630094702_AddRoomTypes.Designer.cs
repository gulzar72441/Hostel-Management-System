// <auto-generated />
using System;
using HostelManagementSystemApi.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HostelManagementSystemApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250630094702_AddRoomTypes")]
    partial class AddRoomTypes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Attendance", b =>
                {
                    b.Property<int>("AttendanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceID"));

                    b.Property<DateTime?>("CheckInTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CheckOutTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("AttendanceID");

                    b.HasIndex("StudentID");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.AttendanceReason", b =>
                {
                    b.Property<int>("AttendanceReasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceReasonId"));

                    b.Property<int>("AttendanceID")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttendanceReasonId");

                    b.HasIndex("AttendanceID");

                    b.ToTable("AttendanceReasons");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Bed", b =>
                {
                    b.Property<int>("BedID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BedID"));

                    b.Property<string>("BedNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOccupied")
                        .HasColumnType("bit");

                    b.Property<int?>("OccupiedByUserID")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.HasKey("BedID");

                    b.HasIndex("OccupiedByUserID");

                    b.HasIndex("RoomID");

                    b.ToTable("Beds");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Booking", b =>
                {
                    b.Property<int>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingID"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BookingID");

                    b.HasIndex("RoomID");

                    b.HasIndex("StudentID");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.ChatMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipientId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RecipientId");

                    b.HasIndex("SenderId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Complaint", b =>
                {
                    b.Property<int>("ComplaintID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComplaintID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HostelID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ComplaintID");

                    b.HasIndex("HostelID");

                    b.HasIndex("StudentID");

                    b.ToTable("Complaints");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Guardian", b =>
                {
                    b.Property<int>("GuardianID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuardianID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("GuardianID");

                    b.HasIndex("StudentID");

                    b.HasIndex("UserID")
                        .IsUnique()
                        .HasFilter("[UserID] IS NOT NULL");

                    b.ToTable("Guardians");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Hostel", b =>
                {
                    b.Property<int>("HostelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HostelID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Amenities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateListed")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeoLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendorID")
                        .HasColumnType("int");

                    b.HasKey("HostelID");

                    b.HasIndex("VendorID");

                    b.ToTable("Hostels");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.HostelImage", b =>
                {
                    b.Property<int>("HostelImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HostelImageID"));

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HostelID")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.HasKey("HostelImageID");

                    b.HasIndex("HostelID");

                    b.ToTable("HostelImages");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.HostelReview", b =>
                {
                    b.Property<int>("HostelReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HostelReviewId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("HostelID")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("HostelReviewId");

                    b.HasIndex("HostelID");

                    b.HasIndex("StudentID");

                    b.ToTable("HostelReviews");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Inventory", b =>
                {
                    b.Property<int>("InventoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryID"));

                    b.Property<int>("HostelID")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InventoryID");

                    b.HasIndex("HostelID");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.InventoryLog", b =>
                {
                    b.Property<int>("InventoryLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryLogId"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("InventoryID")
                        .HasColumnType("int");

                    b.Property<int>("QuantityChanged")
                        .HasColumnType("int");

                    b.Property<int>("StaffID")
                        .HasColumnType("int");

                    b.HasKey("InventoryLogId");

                    b.HasIndex("InventoryID");

                    b.HasIndex("StaffID");

                    b.ToTable("InventoryLogs");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Notice", b =>
                {
                    b.Property<int>("NoticeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NoticeID"));

                    b.Property<string>("Audience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("HostelID")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NoticeID");

                    b.HasIndex("HostelID");

                    b.ToTable("Notices");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.NotificationPreference", b =>
                {
                    b.Property<int>("NotificationPreferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationPreferenceId"));

                    b.Property<bool>("IsEmailEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPushEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSMSEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("NotificationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("NotificationPreferenceId");

                    b.HasIndex("UserID");

                    b.ToTable("NotificationPreferences");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HostelID")
                        .HasColumnType("int");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceiptURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("PaymentID");

                    b.HasIndex("HostelID");

                    b.HasIndex("StudentID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.PaymentTransaction", b =>
                {
                    b.Property<int>("PaymentTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentTransactionId"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GatewayTransactionID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentTransactionId");

                    b.HasIndex("PaymentID");

                    b.ToTable("PaymentTransactions");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Room", b =>
                {
                    b.Property<int>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomID"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HostelID")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomID");

                    b.HasIndex("HostelID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.RoomType", b =>
                {
                    b.Property<int>("RoomTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomTypeID"));

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HostelID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomTypeID");

                    b.HasIndex("HostelID");

                    b.ToTable("RoomTypes");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Staff", b =>
                {
                    b.Property<int>("StaffID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffID"));

                    b.Property<int>("HostelID")
                        .HasColumnType("int");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Salary")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("StaffID");

                    b.HasIndex("HostelID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.StaffAttendance", b =>
                {
                    b.Property<int>("StaffAttendanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffAttendanceID"));

                    b.Property<DateTime?>("CheckInTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CheckOutTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("StaffID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffAttendanceID");

                    b.HasIndex("StaffID");

                    b.ToTable("StaffAttendances");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentID"));

                    b.Property<DateTime>("AdmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BedID")
                        .HasColumnType("int");

                    b.Property<int>("HostelID")
                        .HasColumnType("int");

                    b.Property<string>("KYCStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("StudentID");

                    b.HasIndex("BedID")
                        .IsUnique()
                        .HasFilter("[BedID] IS NOT NULL");

                    b.HasIndex("HostelID");

                    b.HasIndex("RoomID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.StudentActivityLog", b =>
                {
                    b.Property<int>("StudentActivityLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentActivityLogId"));

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentActivityLogId");

                    b.HasIndex("StudentID");

                    b.ToTable("StudentActivityLogs");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.SystemLog", b =>
                {
                    b.Property<int>("SystemLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SystemLogId"));

                    b.Property<string>("LogLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("SystemLogId");

                    b.ToTable("SystemLogs");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.SystemSetting", b =>
                {
                    b.Property<int>("SystemSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SystemSettingId"));

                    b.Property<string>("SettingKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SettingValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SystemSettingId");

                    b.ToTable("SystemSettings");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Vendor", b =>
                {
                    b.Property<int>("VendorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorID"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("VendorID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Attendance", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.Student", "Student")
                        .WithMany("Attendances")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.AttendanceReason", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.Attendance", "Attendance")
                        .WithMany("AttendanceReasons")
                        .HasForeignKey("AttendanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attendance");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Bed", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.User", "OccupiedByUser")
                        .WithMany()
                        .HasForeignKey("OccupiedByUserID");

                    b.HasOne("HostelManagementSystemApi.Domain.Room", "Room")
                        .WithMany("Beds")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OccupiedByUser");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Booking", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HostelManagementSystemApi.Domain.Student", "Student")
                        .WithMany("Bookings")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.ChatMessage", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.User", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HostelManagementSystemApi.Domain.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Recipient");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Complaint", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.Hostel", "Hostel")
                        .WithMany("Complaints")
                        .HasForeignKey("HostelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HostelManagementSystemApi.Domain.Student", "Student")
                        .WithMany("Complaints")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Hostel");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Guardian", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.Student", "Student")
                        .WithMany("Guardians")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HostelManagementSystemApi.Domain.User", "User")
                        .WithOne("Guardian")
                        .HasForeignKey("HostelManagementSystemApi.Domain.Guardian", "UserID");

                    b.Navigation("Student");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Hostel", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.Vendor", "Vendor")
                        .WithMany("Hostels")
                        .HasForeignKey("VendorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.HostelImage", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.Hostel", "Hostel")
                        .WithMany("HostelImages")
                        .HasForeignKey("HostelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hostel");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.HostelReview", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.Hostel", "Hostel")
                        .WithMany("HostelReviews")
                        .HasForeignKey("HostelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HostelManagementSystemApi.Domain.Student", "Student")
                        .WithMany("HostelReviews")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Hostel");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Inventory", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.Hostel", "Hostel")
                        .WithMany("Inventory")
                        .HasForeignKey("HostelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hostel");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.InventoryLog", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.Inventory", "Inventory")
                        .WithMany("InventoryLogs")
                        .HasForeignKey("InventoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HostelManagementSystemApi.Domain.Staff", "Staff")
                        .WithMany("InventoryLogs")
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Notice", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.Hostel", "Hostel")
                        .WithMany("Notices")
                        .HasForeignKey("HostelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hostel");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.NotificationPreference", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.User", "User")
                        .WithMany("NotificationPreferences")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Payment", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.Hostel", "Hostel")
                        .WithMany("Payments")
                        .HasForeignKey("HostelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HostelManagementSystemApi.Domain.Student", "Student")
                        .WithMany("Payments")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Hostel");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.PaymentTransaction", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.Payment", "Payment")
                        .WithMany("PaymentTransactions")
                        .HasForeignKey("PaymentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Room", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.Hostel", "Hostel")
                        .WithMany("Rooms")
                        .HasForeignKey("HostelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hostel");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.RoomType", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.Hostel", "Hostel")
                        .WithMany("RoomTypes")
                        .HasForeignKey("HostelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hostel");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Staff", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.Hostel", "Hostel")
                        .WithMany("Staff")
                        .HasForeignKey("HostelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HostelManagementSystemApi.Domain.User", "User")
                        .WithOne("Staff")
                        .HasForeignKey("HostelManagementSystemApi.Domain.Staff", "UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Hostel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.StaffAttendance", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.Staff", "Staff")
                        .WithMany("StaffAttendances")
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Student", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.Bed", "Bed")
                        .WithOne()
                        .HasForeignKey("HostelManagementSystemApi.Domain.Student", "BedID");

                    b.HasOne("HostelManagementSystemApi.Domain.Hostel", "Hostel")
                        .WithMany("Students")
                        .HasForeignKey("HostelID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HostelManagementSystemApi.Domain.Room", "Room")
                        .WithMany("Students")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HostelManagementSystemApi.Domain.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("HostelManagementSystemApi.Domain.Student", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bed");

                    b.Navigation("Hostel");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.StudentActivityLog", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.Student", "Student")
                        .WithMany("StudentActivityLogs")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.User", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Vendor", b =>
                {
                    b.HasOne("HostelManagementSystemApi.Domain.User", "User")
                        .WithOne("Vendor")
                        .HasForeignKey("HostelManagementSystemApi.Domain.Vendor", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Attendance", b =>
                {
                    b.Navigation("AttendanceReasons");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Hostel", b =>
                {
                    b.Navigation("Complaints");

                    b.Navigation("HostelImages");

                    b.Navigation("HostelReviews");

                    b.Navigation("Inventory");

                    b.Navigation("Notices");

                    b.Navigation("Payments");

                    b.Navigation("RoomTypes");

                    b.Navigation("Rooms");

                    b.Navigation("Staff");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Inventory", b =>
                {
                    b.Navigation("InventoryLogs");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Payment", b =>
                {
                    b.Navigation("PaymentTransactions");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Room", b =>
                {
                    b.Navigation("Beds");

                    b.Navigation("Bookings");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Staff", b =>
                {
                    b.Navigation("InventoryLogs");

                    b.Navigation("StaffAttendances");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Student", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("Bookings");

                    b.Navigation("Complaints");

                    b.Navigation("Guardians");

                    b.Navigation("HostelReviews");

                    b.Navigation("Payments");

                    b.Navigation("StudentActivityLogs");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.User", b =>
                {
                    b.Navigation("Guardian");

                    b.Navigation("NotificationPreferences");

                    b.Navigation("Staff");

                    b.Navigation("Student");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("HostelManagementSystemApi.Domain.Vendor", b =>
                {
                    b.Navigation("Hostels");
                });
#pragma warning restore 612, 618
        }
    }
}
